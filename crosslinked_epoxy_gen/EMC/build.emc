(* EMC: Script *)

(* Created by emc_setup.pl v4.1, August 1, 2021
   on Tue Feb 08 23:02:21 EST 2022 *)

(* define variables *)

variables	= {
  seed		-> -1,
  ntotal	-> 140,
  fshape	-> 1,
  output	-> "evnsml",
  field		-> "pcff/pcff",
  location1	-> "~/Desktop/software/emc_linux/v9.4.4/field/",

  nav		-> 0.6022141179,
  temperature	-> 300,
  radius	-> 5,
  nrelax	-> 100,
  weight_nonbond -> 0.0001,
  weight_bond	-> 0.0001,
  weight_focus	-> 1,
  cutoff	-> 9.5,
  charge_cutoff	-> 9.5,
  kappa		-> 4,

  density1	-> 0.8,
  lprevious	-> 0,
  lphase	-> 0,

  f_dgeba	-> 66,
  f_ipd		-> 34,

  chem_dgeba	-> "CC(C)(c1ccc(OCC([C-])O)cc1)c2ccc(OCC([C-])O)cc2",
  chem_ipd	-> "CC1(CC(CC(C1)(C)C[N-2])[N-2])C"
};

output		= {
  debug		-> false,
  exit		-> true,
  info		-> true,
  warning	-> true
};

(* define force field *)

field		= {
  id		-> pcff,
  mode		-> cff,
    name	-> {location1+field+".frc", location1+field+"_templates.dat"},
  compress	-> false
};

(* define groups *)

groups		= {
  group		-> {
    id		-> dgeba,
    depth	-> 8,
    chemistry	-> chem_dgeba
  },
  group		-> {
    id		-> ipd,
    depth	-> 8,
    chemistry	-> chem_ipd
  }
};

field		= {
  mode		-> apply,
  check		-> {
    atomistic	-> true,
    charge	-> true
  },
  debug		-> false
};

(* determine simulation sizing *)

variables	= {

  (* lengths *)

  lg_dgeba	-> nsites(dgeba),
  lg_ipd	-> nsites(ipd),
  l_dgeba	-> lg_dgeba,
  norm_dgeba	-> 1,
  l_ipd		-> lg_ipd,
  norm_ipd	-> 1,

  (* masses *)

  mg_dgeba	-> mass(dgeba),
  mg_ipd	-> mass(ipd),

  m_dgeba	-> mg_dgeba,
  norm_dgeba	-> 1,
  m_ipd		-> mg_ipd,
  norm_ipd	-> 1,

  (* mass fractions *)

  f_dgeba	-> f_dgeba*l_dgeba/m_dgeba,
  f_ipd		-> f_ipd*l_ipd/m_ipd,

  (* normalization *)

  norm		-> f_dgeba+f_ipd,

  f_dgeba	-> f_dgeba/norm,
  f_ipd		-> f_ipd/norm,

  (* sizing *)

  n_dgeba	-> int(f_dgeba*ntotal/l_dgeba+0.5),
  n_ipd		-> int(f_ipd*ntotal/l_ipd+0.5),

  (* system sizing *)

  ntotal	-> 0,
  mtotal	-> 0
};

(* define interactions *)

simulation	= {
  units		-> {
    permittivity -> 1,
    seed	-> seed
  },
  types		-> {
    coulomb	-> {
      pair	-> {active -> true, cutoff -> charge_cutoff}
    }
  }
};

(* clusters phase 1 *)

clusters	= {
  progress	-> none,
  cluster	-> {
    id		-> dgeba, system -> main, group -> dgeba, n -> n_dgeba},
  cluster	-> {
    id		-> ipd, system -> main, group -> ipd, n -> n_ipd}
};

field		= {
  mode		-> apply,
  check		-> {
    atomistic	-> true,
    charge	-> true
  },
  debug		-> false
};

(* build phase 1 *)

variables	= {
  nphase1	-> ntotal()-ntotal,
  mphase1	-> mtotal()-mtotal,
  vphase1	-> mphase1/nav/density1,
  lbox		-> (vphase1/fshape)^(1/3),
  lphase1	-> fshape*lbox,
  lxx		-> lphase1,
  lyy		-> lbox,
  lzz		-> lbox,
  lzy		-> 0,
  lzx		-> 0,
  lyx		-> 0,
  lphase	-> lphase1,
  ntotal	-> nphase1,
  mtotal	-> mphase1,
  vtotal	-> vphase1
};

types		= {
  cff		-> {
    pair	-> {active -> true, mode -> repulsive, cutoff -> cutoff}
  }
};

build		= {
  system	-> {
    id		-> main,
    split	-> false,
    geometry	-> {xx -> lxx, yy -> lyy, zz -> lzz,
		    zy -> lzy, zx -> lzx, yx -> lyx},
    temperature	-> temperature,
    flag	-> {charge -> true, geometry -> true, map -> true, pbc -> true}
  },
  select	-> {
    progress	-> list,
    frequency	-> 1,
    name	-> "error",
    order	-> random,
    cluster	-> {dgeba, ipd},
    relax	-> {ncycles -> nrelax, radius -> radius},
    grow	-> {
      method	-> energetic,
      check	-> all,
      nbonded	-> 20,
      ntrials	-> 20,
      niterations -> 1000,
      theta	-> 0,
      weight	-> {
	bonded	-> weight_bond, nonbonded -> weight_nonbond,
	focus	-> weight_focus}
    }
  }
};

force		= {style -> none, message -> nkt};
force		= {style -> init, message -> nkt};

(* storage *)

put		= {name -> output, compress -> true};

pdb		= {name -> output, compress -> true, extend -> false,
		   forcefield -> cff, detect -> false, hexadecimal -> false,
		   unwrap -> true, pbc -> true, atom -> index, residue -> index,
		   segment -> index, rank -> false, vdw -> false, cut -> false,
		   fixed -> true, rigid -> true, connectivity -> false,
		   parameters -> false};

lammps		= {name -> output, mode -> put, forcefield -> cff,
		   parameters -> true, types -> false, unwrap -> true,
		   charges -> true, ewald -> true};
